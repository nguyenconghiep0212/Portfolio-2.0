[
  {
    "ContainingType": "BackEnd.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.AuthController",
    "Method": "Refresh",
    "RelativePath": "api/Auth/refresh_token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "refreshToken",
        "Type": "RefreshTokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RegisterRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.CityController",
    "Method": "Createcity",
    "RelativePath": "api/City/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "BackEnd.Models.City",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Models.City",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.CityController",
    "Method": "Deletecity",
    "RelativePath": "api/City/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.CityController",
    "Method": "Getcity",
    "RelativePath": "api/City/detail/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Models.City",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.CityController",
    "Method": "GetCity",
    "RelativePath": "api/City/list",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BackEnd.Interfaces.ListRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Controllers.CityController\u002BCityResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.CityController",
    "Method": "Putcity",
    "RelativePath": "api/City/update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "city",
        "Type": "BackEnd.Models.City",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.IncidentController",
    "Method": "CreateIncident",
    "RelativePath": "api/Incident/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "incidents",
        "Type": "BackEnd.Models.Incident",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Models.Incident",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.IncidentController",
    "Method": "CreateIncidentMany",
    "RelativePath": "api/Incident/CreateMany",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "incidents",
        "Type": "BackEnd.Models.Incident[]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[BackEnd.Models.Incident, BackEnd, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.IncidentController",
    "Method": "DeleteIncident",
    "RelativePath": "api/Incident/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.IncidentController",
    "Method": "GetIncident",
    "RelativePath": "api/Incident/Detail/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Models.Incident",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.IncidentController",
    "Method": "GetIncidents",
    "RelativePath": "api/Incident/List",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BackEnd.Interfaces.ListRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Controllers.IncidentController\u002BListResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.IncidentController",
    "Method": "GetTotalByCity",
    "RelativePath": "api/Incident/TotalByCity",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.IncidentController",
    "Method": "GetTotalBySeverity",
    "RelativePath": "api/Incident/TotalBySeverity",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.IncidentController",
    "Method": "GetTotalBySolved",
    "RelativePath": "api/Incident/TotalBySolved",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.IncidentController",
    "Method": "PutIncident",
    "RelativePath": "api/Incident/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "incidents",
        "Type": "BackEnd.Models.Incident",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.PoiController",
    "Method": "Create",
    "RelativePath": "api/Poi/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "poi",
        "Type": "BackEnd.Models.Poi",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Models.Poi",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.PoiController",
    "Method": "Delete",
    "RelativePath": "api/Poi/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.PoiController",
    "Method": "Get",
    "RelativePath": "api/Poi/Detail/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Models.Poi",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.PoiController",
    "Method": "GetAll",
    "RelativePath": "api/Poi/List",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BackEnd.Interfaces.ListRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Controllers.PoiController\u002BPoiResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.PoiController",
    "Method": "Update",
    "RelativePath": "api/Poi/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "poi",
        "Type": "BackEnd.Models.Poi",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.SampleController",
    "Method": "CreateTodoItem",
    "RelativePath": "api/Sample/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "todoItem",
        "Type": "BackEnd.Models.Sample",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Models.Sample",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.SampleController",
    "Method": "DeleteTodoItem",
    "RelativePath": "api/Sample/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackEnd.Controllers.SampleController",
    "Method": "GetTodoItem",
    "RelativePath": "api/Sample/Detail/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Models.Sample",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.SampleController",
    "Method": "GetTodoItems",
    "RelativePath": "api/Sample/List",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BackEnd.Interfaces.ListRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BackEnd.Controllers.SampleController\u002BSampleResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "BackEnd.Controllers.SampleController",
    "Method": "PutTodoItem",
    "RelativePath": "api/Sample/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "todoItem",
        "Type": "BackEnd.Models.Sample",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]